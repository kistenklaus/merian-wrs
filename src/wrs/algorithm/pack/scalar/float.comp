#version 460

#extension GL_KHR_shader_subgroup_arithmetic : enable
#extension GL_KHR_memory_scope_semantics : enable
// #extension GL_EXT_shader_atomic_float : enable
#extension GL_KHR_shader_subgroup_vote : enable
// #extension GL_KHR_shader_subgroup_ballot : enable
#pragma use_vulkan_memory_model

#define monoid float

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct Split {
    uint i;
    uint j;
    monoid spill;
};

struct AliasTableEntry {
  monoid p;
  uint a;
};

layout(set = 0, binding = 0) readonly buffer in_partitions {
    monoid heavyLightIndicies[];
};

layout(set = 0, binding = 1) readonly buffer in_weights {
    monoid weights[];
};

layout(set = 0, binding = 2) readonly buffer in_mean {
  monoid averageWeight;
};

layout(set = 0, binding = 3) readonly buffer in_splits {
  Split splits[];
};

layout(set = 0, binding = 4) writeonly buffer out_aliastable {
  AliasTableEntry table[];
};

// layout(push_constant) uniform PushConstant {
//     uint size;
// } pc;

void main(void) {
}
